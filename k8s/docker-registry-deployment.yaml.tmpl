apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: docker-registry
    kubernetes.io/cluster-service: "true"
  name: docker-registry
spec:
  replicas: 2
  selector:
    matchLabels:
      app: docker-registry
      kubernetes.io/cluster-service: "true"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: docker-registry
        kubernetes.io/cluster-service: "true"
      annotations:
        kube2iam.beta.nordstrom.net/role: "${kube2iam_role?:kube2iam_role must be set}"
        pod.beta.kubernetes.io/init-containers: |
          [
              {
                  "name": "install-nord-ca-roots",
                  "image": "quay.io/nordstrom/baseimage-ubuntu:16.04",
                  "imagePullPolicy": "IfNotPresent",
                  "command": [
                      "/bin/sh",
                      "-c",
                      "cat /etc/ssl/certs/ca-certificates.crt /tmp/nord-ca-certs/*.pem >> /trusted-certs/ca-certificates.crt"
                  ],
                  "volumeMounts": [
                      {
                          "name": "trusted-ca-certs",
                          "mountPath": "/trusted-certs"
                      },
                      {
                          "name": "nord-ca-certs",
                          "mountPath": "/tmp/nord-ca-certs",
                          "readOnly": true
                      }
                  ]
              }
          ]
    spec:
      containers:
      - name: registry
        image: docker.io/library/registry:2.5.1
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: docker-registry
              key: ha-shared-secret
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        readinessProbe:
          httpGet:
            path: /
            port: 5000
            scheme: HTTPS
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/docker/registry
          name: config
          readOnly: true
        - mountPath: /etc/ssl/docker
          name: tls-cert
          readOnly: true
        - mountPath: /etc/ssl/certs
          name: trusted-ca-certs
          readOnly: true
        - mountPath: /etc/ssl/portus
          name: portus-tls-cert
          readOnly: true
        - mountPath: /tmp/ca-certificates
          name: nord-ca-certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: docker-registry
      - name: nord-ca-certs
        configMap:
          name: nord-ca-certs
      - name: trusted-ca-certs
        emptyDir: {}
      - name: tls-cert
        secret:
          defaultMode: 400
          secretName: docker.registry.${platform_domain_name?:platform_domain_name must be set}.tls
      - name: portus-tls-cert
        secret:
          defaultMode: 400
          secretName: portus.registry.${platform_domain_name?:platform_domain_name must be set}.tls
