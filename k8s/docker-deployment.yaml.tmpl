apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: docker-registry
    kubernetes.io/cluster-service: "true"
    version: v0
  name: docker-registry-v0
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
      kubernetes.io/cluster-service: "true"
      version: v0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      annotations:
        kube2iam.beta.nordstrom.net/role: "${kube2iam_role?:\"kube2iam_role must be set\"}"
      labels:
        app: docker-registry
        kubernetes.io/cluster-service: "true"
        version: v0
    spec:
      containers:
      - name: registry
        image: docker.io/library/registry:2.5.1
        command:
        - /bin/sh
        - -c
        args:
        - >
          cp /tmp/ca-certificates/*.pem /usr/local/share/ca-certificates && \
          update-ca-certificates && \
          exec /bin/registry serve /etc/docker/registry/config.yml
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              name: docker-app
              key: ha-shared-secret
        ports:
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /etc/docker/registry
          name: config
          readOnly: true
        - mountPath: /etc/ssl/docker
          name: tls-cert
          readOnly: true
        - mountPath: /etc/ssl/portus
          name: portus-tls-cert
          readOnly: true
        - mountPath: /tmp/ca-certificates
          name: nord-ca-certs
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: docker
      - name: nord-ca-certs
        configMap:
          name: nord-ca-certs
      - name: tls-cert
        secret:
          defaultMode: 400
          secretName: docker.registry.${platform_domain_name?:"platform_domain_name must be set"}.tls
      - name: portus-tls-cert
        secret:
          defaultMode: 400
          secretName: portus.registry.${platform_domain_name?:"platform_domain_name must be set"}.tls
